Given an array nums of n integers and an integer target, find three integers in nums such that the sum is closest to target. Return the sum of the three 
integers. You may assume that each input would have exactly one solution.

 

Example 1:

Input: nums = [-1,2,1,-4], target = 1
Output: 2
Explanation: The sum that is closest to the target is 2. (-1 + 2 + 1 = 2).

class Solution:
    def threeSumClosest(self, nums: List[int], target: int) -> int:
        # 3 integers closest to target
        diff = 0
        temp = 0
        nums = sorted(nums)
        for i in range(len(nums)):
            x = target - nums[i]
            j = i+1
            k = len(nums) - 1
            if i==0:
                diff = x - (nums[j]+nums[k])
                temp = nums[i] + nums[j] + nums[k]
            while j<k:
                if nums[j] + nums[k] == x:
                    return target
                else:
                    if abs(x - (nums[j] + nums[k])) < abs(diff):
                        diff = x - (nums[j] + nums[k])
                        temp = nums[i] + nums[j] + nums[k]
                    if nums[j] + nums[k]>x:  
                        k -= 1
                    else:
                        j += 1
        return temp
